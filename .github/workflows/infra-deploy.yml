name: Infra provision

on: workflow_dispatch

# GitHub token permissions
permissions:
    id-token: write
    contents: read
    pull-requests: write

env:
  AWS_REGION: "us-east-2"
  terraformVersion: 1.3.6
  terraformS3Key: state-file/terraform.tfstate
  terraformBucket: keycloak-tf
  working_dir: infra

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check terraform code
        uses: actions/checkout@v3
        
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
            role-to-assume: arn:aws:iam::${{ secrets.ADEX_POC }}:role/github_oidc
            role-session-name: OIDCSession
            aws-region: ${{ env.AWS_REGION }}
            
      - name: Set up terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Verify Terraform version
        run: terraform --version

      - name: Fetching Secrets
        run: |
          cd ${{ env.working_dir }}
          cat << EOF > sec.tfvars
          db_username               = "${{ secrets.DB_USERNAME }}"
          db_password               = "${{ secrets.DB_PASSWORD }}"
          keycloak_admin_username   = "${{ secrets.KEYCLOAK_ADMIN_USERNAME }}"
          keycloak_admin_password   = "${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}"
          certificate_arn_us-east-1 = "arn:aws:acm:us-east-1:${{ secrets.ADEX_POC}}:certificate/${{ secrets.CERT_US_EAST_1}}"
          certificate_arn_us-east-2 = "arn:aws:acm:us-east-2:${{ secrets.ADEX_POC}}:certificate/${{ secrets.CERT_US_EAST_2}}"
          EOF
          cd ..
          sed -i '2s;^;AWS_ACCOUNT_ID=${{ secrets.ADEX_POC }}\n;' scripts/push.sh
          cat scripts/push.sh

      - name: Terraform Initialize
        run: |
          cd ${{ env.working_dir }}
          terraform init -backend-config="bucket=${{ env.terraformBucket }}" -backend-config="key=${{ env.terraformS3Key}}"

      - name: Terraform validation
        run: |
          cd ${{ env.working_dir }}
          terraform validate

      - name: Terraform plan
        run: |
          cd ${{ env.working_dir }}
          terraform plan -var-file="dev.tfvars" -var-file="sec.tfvars"

      - name: Terraform apply
        run: |
          cd ${{ env.working_dir }}
          terraform apply -var-file=dev.tfvars -var-file=sec.tfvars --auto-approve